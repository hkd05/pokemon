# -*- coding: utf-8 -*-
"""Pokemon_dataproject

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Bk3ElIFMvU2yvuuJqaoI6j7RjwgrP8oW

### Pokemon Data Project

### Data Cleaning
"""

# load the dataset

import pandas as pd
import numpy as np

pokemon_df = pd.read_csv('/content/pokemon.csv')
pokemon_df.head()

# rename header

pokemon_df.rename(columns={"#": "ID"}, inplace=True)
pokemon_df.head()

pokemon_df.rename(columns={"Type 1": "Primary Type"}, inplace=True)
pokemon_df.head()

pokemon_df.rename(columns={"Type 2": "Secondary Type"}, inplace=True)
pokemon_df.head()

# some of the Pokemon's names have punctuation

pokemon_names1 = pokemon_df["Name"]

pokemon_updated = pokemon_df['Name'].str.replace('[^\w\s]','')
pokemon_updated.head()

"""### Cleaning/Formatting Website Data"""

from bs4 import BeautifulSoup
import requests

# Request to website / load data

url='https://pokemondb.net/pokedex/all'
req=requests.get(url)
content=req.text

pokemon_web=BeautifulSoup(content, "html.parser")

print(pokemon_web)

# checking status of web request

def status_check(r):
    if r.status_code==200:
        print("Success")
        return 1
    else:
        print("Failed")
        return -1

status_check(req)

type(pokemon_web)

# Step One: format data into a more readable format

# pokemon table
with open("/content/pokemon_database.html", "r") as fd:
    soup = BeautifulSoup(fd)
    print(type(soup))

results = soup.find(id="pokedex")

print(results.prettify())

# find headers in the table
headers = pokemon_web.find_all('th')
print(headers)

with open("/content/pokemon_database.html", "r") as fd:
    soup = BeautifulSoup(fd)
    print(type(soup))

data_p = soup.findAll('tr')
print ("Data is a {} and {} items long".format(type(data_p), len(data_p)))

data_without_header = data_p[1:]
headers = data_p[0]
headers

col_headers = [th.getText() for th in headers.findAll('th')]
col_headers

# making a 2D list

df_data = [[td.getText() for td in tr.findAll('td')] for tr in data_without_header]
df_data

# making the dataframe

pokemonweb_df = pd.DataFrame(df_data, columns=col_headers)
pokemonweb_df.head()

# Step Two: Replace "#" header

pokemonweb_df.rename(columns={"#": "ID"}, inplace=True)
pokemonweb_df.head()

pokemonweb_df.rename(columns={"Sp. Atk": "Sp_Atk"}, inplace=True)
pokemonweb_df.head()

pokemonweb_df.rename(columns={"Sp. Def": "Sp_Def"}, inplace=True)
pokemonweb_df.head()

# Step Four: Removing punctuation from "Name" column

pokemonweb_names = pokemonweb_df["Name"]

pokemonweb_updated = pokemonweb_df['Name'].str.replace('[^\w\s]','')
pokemonweb_updated.head()

"""### Using an API"""

import urllib.request, urllib.parse, urllib.error
import json
import requests

serviceurl = 'https://pokeapi.co/api/v2/pokemon?limit=151'

resp = requests.get(serviceurl)

resp.raise_for_status()

# check for errors

resp

# python object as a dictionary or list / creating the dataframe

json = resp.json()

json

json.keys()

json['results']

# Format data into a more readable format / create dataframe

poke_df = pd.DataFrame(json['results'])

poke_df.head(5)

# Replace Headers

poke_df2 = poke_df.rename(columns={'name': 'Pokemon_Name', 'url': 'API_URL'})
poke_df2.head(10)